{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Dsu": {
		"prefix": "tempDsu",
		"body": [
			"struct DSU {",
			"  vector<int> p;",
			"  DSU(int n = 0) : p(n + 2, -1) {};",
			"  int Root(int x) { return p[x] < 0 ? x : p[x] = Root(p[x]); }",
			"  bool Unite(int u, int v) {",
			"    u = Root(u); v = Root(v);",
			"    if (u == v) return 0;",
			"    if (p[u] > p[v]) swap(u, v);",
			"    p[u] += p[v];",
			"    p[v] = u;",
			"    return 1;",
			"  }",
			"};"
		],
		"description": ""
	}
}